<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo美化--next主题</title>
    <url>/2020/04/06/nextthemefirst/</url>
    <content><![CDATA[<h1 id="hexo美化–next主题"><a href="#hexo美化–next主题" class="headerlink" title="hexo美化–next主题"></a>hexo美化–next主题</h1><h4 id="这里我们已经搭建起我们的个人博客了，那么让它赏心悦目便提上了日程。"><a href="#这里我们已经搭建起我们的个人博客了，那么让它赏心悦目便提上了日程。" class="headerlink" title="这里我们已经搭建起我们的个人博客了，那么让它赏心悦目便提上了日程。"></a><a href="https://asmikezheng.github.io/2020/03/13/hexofirst/#more" target="_blank" rel="noopener">这里</a>我们已经搭建起我们的个人博客了，那么让它赏心悦目便提上了日程。</h4><blockquote>
<p>产生快感的叫做美，产生不快感的叫做丑。                             ——沃尔夫</p>
</blockquote>
<a id="more"></a>

<p><strong>好看又好用的主题推荐</strong>：界面很美的Sakura和Butterfly，3-hexo适合博文比较多的同学，以及我们今天的主角next，插件很多并且简洁</p>
<blockquote>
<p>那让我们开始吧</p>
</blockquote>
<h3 id="1-首先咱们先来看看它的官方网站的使用说明"><a href="#1-首先咱们先来看看它的官方网站的使用说明" class="headerlink" title="1. 首先咱们先来看看它的官方网站的使用说明"></a>1. 首先咱们先来看看它的官方网站的使用说明</h3><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">点这里</a>进入其官网的<strong>使用文档</strong>可以看到其中提供了：</p>
<ul>
<li>主题的下载与启用</li>
<li>三种样式的选择和语言的更换</li>
<li>设置菜单，侧栏，头像，作者昵称和站点描述</li>
<li>以及第三方服务，如：阅读统计次数等</li>
</ul>
<p><strong>有一点需要注意</strong>，如图在<code>主题配置文件</code>中设定菜单内容时，将句首的<code>#</code>删去既是启用这一菜单，让我们看注释</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br></pre></td></tr></table></figure>

<h2 id="注意注意注意"><a href="#注意注意注意" class="headerlink" title="注意注意注意"></a>注意注意注意</h2><p><strong>我们可以知道，以<code>categories: /categories/|| th</code>为例，第一个categories是指<code>Usage</code>，第二个是指其目标链接，因此而后的<code>/</code>后边就</strong>不可以<strong>有空格，</strong></p>
<p><strong>如果有空格则在预览时会出现这样的地址<code>http://localhost:4000/categories/%20/</code>其中<code>/%20</code>就是这个空格造成的，因此要将其删去。</strong></p>
<hr>
<p>通过以上的配置已经可以让博客具有更强的实用性和拥有更强大的功能，但是我们还希望让它更活泼，那么接下来的这些设置可能会满足你。</p>
<h3 id="2-个性化设置"><a href="#2-个性化设置" class="headerlink" title="2. 个性化设置"></a>2. 个性化设置</h3><h4 id="2-1-动态背景"><a href="#2-1-动态背景" class="headerlink" title="2.1 动态背景"></a>2.1 动态背景</h4><p>next主题在5.1.1以上的版本的话只需要打开<code>主题配置文件</code>找到这段代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: ture</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"></span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"></span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br></pre></td></tr></table></figure>

<p>这里有四种动态背景的样式，选择自己喜欢的一种把<code>false</code>改成<code>ture</code>即可。</p>
<h4 id="2-1-打赏功能"><a href="#2-1-打赏功能" class="headerlink" title="2.1 打赏功能"></a>2.1 打赏功能</h4><p>……未完待续</p>
<blockquote>
<p>等慢慢更新好了</p>
</blockquote>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>树莓派初体验</title>
    <url>/2020/03/16/Raspberryfirst/</url>
    <content><![CDATA[<h1 id="树莓派（不是一种食物）"><a href="#树莓派（不是一种食物）" class="headerlink" title="树莓派（不是一种食物）"></a>树莓派（不是一种食物）</h1><h4 id="关于树莓派系统搭建和开机"><a href="#关于树莓派系统搭建和开机" class="headerlink" title="关于树莓派系统搭建和开机"></a>关于树莓派系统搭建和开机</h4><blockquote>
<p>本文基于win10系统，针对树莓派4B的系统搭建（同时适用于树莓派3B和3B+）</p>
</blockquote>
<a id="more"></a>

<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>树莓派</strong>英文名(Raspberry Pi)，是为计算机编程而设计的只有手掌大小的卡片式电脑，其系统基于Linux。随着Windows 10 IoT的发布，我们也可以使用运行Windows系统的树莓派。</p>
<p><strong>树莓派到底能干什么</strong><br>Our mission is to put the power of computing and digital making into the hands of people all over the world. We do this so that more people are able to harness the power of computing and digital technologies for work, to solve problems that matter to them, and to express themselves creatively.                                         ——<a href="https://www.raspberrypi.org/" target="_blank" rel="noopener">树莓派官网</a></p>
<hr>
<p><strong>树莓派型号对比</strong></p>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">Raspberry Pi 3B</th>
<th align="center">Raspberry Pi 3B+</th>
<th align="center">Raspberry Pi 4B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SOC</td>
<td align="center">Broadcom BCM2837</td>
<td align="center">Broadcom BCM2837B0</td>
<td align="center">Broadcom BCM2711</td>
</tr>
<tr>
<td align="center">CPU</td>
<td align="center">64-位 1.2GHz四核</td>
<td align="center">64-位 1.4GHz四核</td>
<td align="center">64-位 1.5GHz四核</td>
</tr>
<tr>
<td align="center">GPU</td>
<td align="center">BVC IV@400MHz</td>
<td align="center">BVC IV@400MHz</td>
<td align="center">BVC VI@500MHz</td>
</tr>
<tr>
<td align="center">蓝牙</td>
<td align="center">蓝牙4.1</td>
<td align="center">蓝牙4.2</td>
<td align="center">蓝牙5.0</td>
</tr>
<tr>
<td align="center">USB接口</td>
<td align="center">USB2.0*4</td>
<td align="center">USB2.0*4</td>
<td align="center">USB2.0<em>2/USB3.0</em>2</td>
</tr>
<tr>
<td align="center">HDMI</td>
<td align="center">标准HDMI*1</td>
<td align="center">标准HDMI*1</td>
<td align="center">micro HDMI*2支持4k60</td>
</tr>
<tr>
<td align="center">有线网络</td>
<td align="center">10/100Mb/s以太网</td>
<td align="center">USB 2.0千兆以太网</td>
<td align="center">真千兆以太网(网口可达)</td>
</tr>
<tr>
<td align="center">以太网Poe</td>
<td align="center">无</td>
<td align="center">通过额外的HAT以太网供电</td>
<td align="center">通过额外的HAT以太网供电</td>
</tr>
</tbody></table>
<blockquote>
<p>ps.通过上图我觉得是等等党的胜利hhh</p>
</blockquote>
<hr>
<p><strong>准备工作</strong>：</p>
<ul>
<li><strong>准备一张空的SD卡，官方推荐是8G以上</strong></li>
<li><strong>一根网线</strong></li>
<li><strong>格式化工具SDFormatter</strong>：在<a href="https://www.sdcard.org/downloads/formatter/eula_windows/" target="_blank" rel="noopener">这里</a>下载（滑到最下边点击accept接受协议可下载)</li>
<li><strong>烧写镜像的工具Win32DiskImager</strong>：在<a href="https://sourceforge.net/projects/win32diskimager/" target="_blank" rel="noopener">这里</a>下载</li>
</ul>
<blockquote>
<p>那让我们开始吧</p>
</blockquote>
<h3 id="1-树莓派官方镜像的下载与安装"><a href="#1-树莓派官方镜像的下载与安装" class="headerlink" title="1. 树莓派官方镜像的下载与安装"></a>1. 树莓派官方镜像的下载与安装</h3><h4 id="1-1树莓派官方镜像"><a href="#1-1树莓派官方镜像" class="headerlink" title="1.1树莓派官方镜像"></a>1.1树莓派官方镜像</h4><p>进入<a href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener">树莓派官网</a>的下载界面，下边给出了树莓派的两种官方推荐的操作系统，分别是Raspberry和Noobs，我们选择前者进行安装，点击进入后我们选择第一个，如图：<br><img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/raspberrysystem.png" alt="raspberry"><br>因为里边预装了Python，Java，Scratch等编程教育软件和图形化桌面。</p>
<p>下载好本地解压之后我们得到了一个<code>.img</code>的镜像文件</p>
<blockquote>
<p><strong>注</strong>：如果还是压缩文件或者不能正常显示，说明是压缩软件本身需要设计，进入压缩软件设置界面，如图将img文件前的对勾去掉。</p>
<div  align="center"> <img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/select.png" style="zoom:50%" ></div>
</blockquote>
<h4 id="1-2镜像的烧写"><a href="#1-2镜像的烧写" class="headerlink" title="1.2镜像的烧写"></a>1.2镜像的烧写</h4><ul>
<li>将sd卡插入电脑，使用专门的格式化工具SDFormatter，格式化内存卡。</li>
<li>将已经下载好的Win32DiskImager安装后运行</li>
</ul>
<div  align="center"> <img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/win32disk.png" style="zoom:80%" ></div>

<ul>
<li>1处选择之前下载好的镜像文件，2处选择SD卡，3前两步选好后，点击write开始烧写。</li>
<li>等待烧录完成，拔掉SD卡，插入树莓派上电，系统会自动安装完成。</li>
</ul>
<blockquote>
<p><strong>注</strong>：烧录完成后，win系统可能会因为无法识别Linux分区格式而提示用户格式化，此时不要点格式化！不要点格式化！不要点格式化！直接点取消就可以了。如果点了格式化，树莓派会因为丢失系统文件而无法开机，需要重新烧录IMG镜像文件。</p>
</blockquote>
<h4 id="此时树莓派的安装系统已经完成，如果有显示的同学可直接进入树莓派系统"><a href="#此时树莓派的安装系统已经完成，如果有显示的同学可直接进入树莓派系统" class="headerlink" title="此时树莓派的安装系统已经完成，如果有显示的同学可直接进入树莓派系统"></a>此时树莓派的安装系统已经完成，如果有显示的同学可直接进入树莓派系统</h4><hr>
<blockquote>
<p>以下内容针对没有显示屏的同学</p>
</blockquote>
<h3 id="2-我们来远程登录树莓派"><a href="#2-我们来远程登录树莓派" class="headerlink" title="2.我们来远程登录树莓派"></a>2.我们来远程登录树莓派</h3><h4 id="2-1准备工作"><a href="#2-1准备工作" class="headerlink" title="2.1准备工作"></a>2.1准备工作</h4><p>我们将SD卡再插入电脑，打开SD卡盘符新建ssh文件（因为自2016年9月开始，raspberry默认关闭ssh连接）</p>
<blockquote>
<p><strong>注</strong>：这里是文件，而不是文本文件，删除其后缀的办法是打开<strong>控制面板</strong> \ <strong>文件资源管理器选项</strong> \ <strong>查看</strong>，取消勾选隐藏已知文件类型的拓展名，点确定，如图然后再将ssh后边新多出的<code>.txt</code>删除 <div  align="center"><img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/text.png" style="zoom:50%"></div></p>
</blockquote>
<h4 id="2-2正式开始"><a href="#2-2正式开始" class="headerlink" title="2.2正式开始"></a>2.2正式开始</h4><ul>
<li>首先将树莓派通过网线连接至路由器</li>
<li>在笔记本电脑中打开：控制面板 \ 网络和共享中心 \ 更改适配器设置，找到无线网络连接右键“属性”，在共享选项卡上选中“允许其他网络用户通过此计算机的Internet连接来连接（N）”选项,如图，点确定。</li>
</ul>
<div  align="center"><img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/win10int.png" style="zoom:50%"></div>

<ul>
<li>而后进入路由器的管理员界面，我用的是TP-Link，所以其管理员网址为<a href="http://tplogin.cn/" target="_blank" rel="noopener">http://tplogin.cn/</a> 登录后在设备管理界面找到树莓派，如图，查看其IP，我的树莓派IP是192.168.1.100</li>
</ul>
<p><img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/raspberryip1.png" alt="raspberry1"><br><img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/raspberryip2.png" alt="raspberry2"></p>
<ul>
<li>使用Putty或者Xshell远程登录，在IP处输入已获取的树莓派的IP，选择22号端口，单击open即可进入Raspbian的命令行界面。</li>
</ul>
<blockquote>
<p>初始用户名：pi<br>初始密码：raspberry</p>
</blockquote>
<h3 id="3-VNC远程桌面"><a href="#3-VNC远程桌面" class="headerlink" title="3.VNC远程桌面"></a>3.VNC远程桌面</h3><p>首先在电脑上安装VNC viewer<a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">这里</a>。而后启动PC端的VNC Viewer输入树莓派的IP和链接密码即可进入树莓派的操作界面。如图：</p>
<p><img src="https://raw.githubusercontent.com/Asmikezheng/photo/raspberry/end.png" alt="end"></p>
<h3 id="散花"><a href="#散花" class="headerlink" title="散花"></a>散花</h3>]]></content>
      <categories>
        <category>Raspberry</category>
      </categories>
  </entry>
  <entry>
    <title>hexo-github个人博客搭建</title>
    <url>/2020/03/13/hexofirst/</url>
    <content><![CDATA[<h1 id="hexo-github个人博客搭建"><a href="#hexo-github个人博客搭建" class="headerlink" title="hexo-github个人博客搭建"></a>hexo-github个人博客搭建</h1><blockquote>
<p>作为经过两天搭建和调试之后的总结，希望可以帮助到更多的人，同时也作为本站第一篇博客，小激动max</p>
</blockquote>
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>github</strong>是一款面向开源和私有（曾经是收费的现在已经可以免费使用）软件软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。</p>
<p><strong>hexo</strong>是一款简洁，高效（只有三行代码就可以把博客部署到远端）的博客框架，并且有很多插件可以使用。</p>
<p><strong>优缺点</strong>关于github的登录和浏览有的时候可能因为万里长城的原因而有些慢，但是托管在github上移动方便，还省心。</p>
<p><strong>准备工作</strong>：</p>
<blockquote>
<p><strong>注</strong>：本文是在win10系统下进行操作</p>
</blockquote>
<ul>
<li><strong>首先要注册一个github账号</strong></li>
<li><strong>下载node.js</strong><a href="https://nodejs.org" target="_blank" rel="noopener">这里</a>，<strong>进入界面后点击第一个大的绿色框框，是指的node的长期支持版，下载好之后安装在任意位置</strong></li>
<li><strong>下载git</strong><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">这里</a>，</li>
</ul>
<blockquote>
<p><strong>那让我们开始吧</strong></p>
</blockquote>
<h3 id="1-进入命令管理器"><a href="#1-进入命令管理器" class="headerlink" title="1. 进入命令管理器"></a>1. 进入命令管理器</h3><h4 id="win-R后在弹窗中输入cmd"><a href="#win-R后在弹窗中输入cmd" class="headerlink" title="win+R后在弹窗中输入cmd"></a>win+R后在弹窗中输入cmd</h4><p>输入<code>node -v</code>可以查看到之前安装的node版本信息，证明安装成功，如图我的版本是10.16.0：<br><img src="https://raw.githubusercontent.com/Asmikezheng/photo/hexo/node.png" alt="node"></p>
<p>接下来在cmd中继续输入<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code> 这里为什么是淘宝的呢？因为国内的直接下载比较慢，用淘宝的镜像相对来说会快一些。然后输入<code>cnpm -v</code>会弹出其版本号，证明安装成功。</p>
<blockquote>
<p><strong>注</strong>：这里可能会比较慢，甚至安装不成功，这是因为丢包等原因，所以可以多试几次</p>
</blockquote>
<p>继续输入<code>cnpm install -g hexo-cli</code>安装hexo，等待完成后同样输入<code>hexo -v</code>可以看到其版本号如图：<br><img src="https://raw.githubusercontent.com/Asmikezheng/photo/hexo/hexo.png" alt="hexo"></p>
<h3 id="2-在你喜欢的目录下搭建博客"><a href="#2-在你喜欢的目录下搭建博客" class="headerlink" title="2.在你喜欢的目录下搭建博客"></a>2.在你喜欢的目录下搭建博客</h3><h4 id="2-1创建文件夹"><a href="#2-1创建文件夹" class="headerlink" title="2.1创建文件夹"></a>2.1创建文件夹</h4><ul>
<li><p><strong>通过鼠标右键创建新文件夹命名为喜欢的名字，我就命名为blog好了</strong><br>这时候接下来的大部分操作都是对这个文件夹里即将出现的文件进行操作，之后出现的问题，解决无果可以直接把这个文件夹删掉重新来过。</p>
</li>
<li><p><strong>通过cmd界面进入这个文件夹</strong><br><code>cd blog</code>就可以进入目录。输入<code>hexo init</code>之后等待一段时间，就会发现blog文件夹中多出了很多文件，这些就是hexo自动为你搭建起来的基础博客框架。</p>
</li>
</ul>
<blockquote>
<p><strong>注</strong>这里如果没有反应的话可以点进blog文件夹，右键后选择Git Bash here，而后输入<code>hexo init</code>也可以实现目标</p>
</blockquote>
<p><strong>这样博客的基础框架就已经在本地搭建完成啦。这时候接着输入<code>hexo start</code>可以启动本地预览功能如图：(不要理会中间那好几行黄字的WARN，重点在最后一行)</strong></p>
<p><img src="https://raw.githubusercontent.com/Asmikezheng/photo/hexo/hexostart.png" alt="hexostart"></p>
<h4 id="这时候打开浏览器输入最后一行的网址http-localhost-4000，就可以本地预览搭建好的博客啦。"><a href="#这时候打开浏览器输入最后一行的网址http-localhost-4000，就可以本地预览搭建好的博客啦。" class="headerlink" title="这时候打开浏览器输入最后一行的网址http://localhost:4000，就可以本地预览搭建好的博客啦。"></a><strong>这时候打开浏览器输入最后一行的网址<a href="http://localhost:4000，就可以本地预览搭建好的博客啦。">http://localhost:4000，就可以本地预览搭建好的博客啦。</a></strong></h4><blockquote>
<p>最后按Ctrl+c，然后按y，然后回车就可以结束进程</p>
</blockquote>
<h4 id="2-2写自己的第一篇博客"><a href="#2-2写自己的第一篇博客" class="headerlink" title="2.2写自己的第一篇博客"></a>2.2写自己的第一篇博客</h4><ul>
<li><p>可以在网上搜索各种支持markdown的编辑器，比如我使用的是<a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a>，按照markdown语法写下，直接复制到<code>blog\source\_posts</code>目录下的一个文本编辑器中。</p>
</li>
<li><p>其中有一篇hexo自动生成的<code>helloword</code>文件，也就是刚刚打开<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 看到的那篇。</p>
</li>
<li><p>然后再命令行中输入<code>hexo g</code>使得hexo生成静态网页，然后输入<code>hexo s</code>就又回到上一张图片处，但是不同的是在博客中出现了一篇<strong>新的博文</strong>。</p>
</li>
</ul>
<p><strong>是不是很惊喜，就是这么的简单</strong></p>
<blockquote>
<p><strong>注1</strong>：<strong>本地预览</strong>是为了先看到博文的样子，对于错误进行自查和修改<br><strong>注2</strong>：结束的方式是<code>ctrl+c</code>然后再按Y键</p>
</blockquote>
<h3 id="3-将本地的hexo和github联系起来"><a href="#3-将本地的hexo和github联系起来" class="headerlink" title="3.将本地的hexo和github联系起来"></a>3.将本地的hexo和github联系起来</h3><h4 id="3-1登录github与新建仓库"><a href="#3-1登录github与新建仓库" class="headerlink" title="3.1登录github与新建仓库"></a>3.1登录github与新建仓库</h4><p>登录github后点击Repositories，位置如图，建立一个新的仓库（右边有一个绿色的new的按钮就是新建仓库）：<br><img src="https://raw.githubusercontent.com/Asmikezheng/photo/hexo/block.png" alt=""></p>
<blockquote>
<p><strong>注</strong>这里一定要注意用户部署个人博客的github仓库的命名必须符合特定要求才行，必须是<code>用户名.github.io</code></p>
</blockquote>
<p>下边都默认就好</p>
<p>然后回到命令行中输入<code>cnpm install --save hexo-deployer-git</code>安装一个git的部署的插件</p>
<h4 id="3-2设置关联"><a href="#3-2设置关联" class="headerlink" title="3.2设置关联"></a>3.2设置关联</h4><p>用文本编辑器打开blog文件夹里的<code>_config.yml</code>文件拉到最后输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  type: <span class="string">'git'</span></span><br><span class="line">  repo: https://github.com/user/user.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注</strong>：其中第五行git必须在引号之<strong>内</strong>，并且冒号之后有一个<strong>空格</strong></p>
</blockquote>
<h4 id="3-3-将本地博客推向远端"><a href="#3-3-将本地博客推向远端" class="headerlink" title="3.3 将本地博客推向远端"></a>3.3 将本地博客推向远端</h4><p>在命令行中输入<code>hexo d</code>在下边的提示中输入github的账号和密码，等待一下</p>
<blockquote>
<p><strong>注1</strong>：这里要是报错（git没有global身份）的话回到Git界面输入<code>git config --global user.name</code>再输入<code>git config --global user.email</code>“xxx@xxx”<br><strong>注2</strong>：同时推向远端不一定马上就能看到更新之后的样子，因为不要着急多刷新几次就好了</p>
</blockquote>
<p>然后在github之前新建的仓库中就能看到一些文件啦，其实就是blog文件夹中的文件上传到github上</p>
<p><strong>这时候输入<a href="http://user.github.io" target="_blank" rel="noopener">http://user.github.io</a> 就可以进入远端的博客啦</strong></p>
<h3 id="以上就是搭建一个hexo-github博客的全部啦，散花"><a href="#以上就是搭建一个hexo-github博客的全部啦，散花" class="headerlink" title="以上就是搭建一个hexo-github博客的全部啦，散花"></a><strong>以上就是搭建一个hexo-github博客的全部啦，散花</strong></h3>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>纪念丹尼斯.里奇--一切源于hello World</title>
    <url>/2020/03/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>使用说明</category>
      </categories>
  </entry>
</search>
